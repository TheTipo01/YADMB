var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"YADMB","text":"<p>Yet Another Discord Music Bot - A music bot written in go</p>"},{"location":"index.html#features","title":"Features","text":"<ul> <li>Supports what yt-dlp supports, plus spotify playlists (if you configure the   required tokens!)</li> <li>Uses slash commands (see Commands for a list of commands)</li> <li>Save your favorite songs and playlists with custom commands</li> <li>Automatically skips sponsors or moments when there's no music, thanks to   the SponsorBlock API</li> <li>Caches songs locally, so the bot doesn't have to download them every time</li> <li>Stream songs from the internet, useful for radios</li> <li>Blacklist users from using the bot</li> <li>Allow only certain users to use the bot, with the DJ role</li> </ul>"},{"location":"index.html#requirements","title":"Requirements","text":"<ul> <li>DCA</li> <li>yt-dlp</li> <li>ffmpeg</li> </ul>"},{"location":"api.html","title":"API Reference","text":""},{"location":"commands.html","title":"Commands","text":"<p><code>/play &lt;link&gt; &lt;shuffle&gt; &lt;loop&gt; &lt;priority&gt;</code> - Plays a song from YouTube or spotify playlist. If it's not a valid link, it will insert into the queue the first result for the given query.</p> <ul> <li><code>shuffle</code> if set to true, it will shuffle the playlist.</li> <li><code>loop</code> if set to true, it will loop the playlist.</li> <li><code>priority</code> if set to true, it will insert the song at the top of the queue.</li> </ul> <p><code>/playlist &lt;link&gt; &lt;shuffle&gt; &lt;loop&gt; &lt;priority&gt;</code> - Same as play, but accepts YouTube playlist</p> <p><code>/skip</code> - Skips the currently playing song</p> <p><code>/clear</code> - Clears the entire queue</p> <p><code>/pause</code> - Pauses currently playing song</p> <p><code>/resume</code> - Resumes current song</p> <p><code>/queue</code> - Prints the currently playing song and the next songs</p> <p><code>/disconnect</code> - Disconnect the bot from the voice channel</p> <p><code>/restart</code> - Restarts the bot (works only for the bot owner, see <code>config.yml</code>)</p> <p><code>/addcustom &lt;custom_command&gt; &lt;song/playlist&gt; &lt;loop&gt;</code> - Creates a custom command to play a song or playlist. Set <code>loop</code> to true to play the song looped</p> <p><code>/rmcustom &lt;custom_command&gt;</code> - Removes a custom command from the DB</p> <p><code>/listcustom</code> - Lists all custom commands for the current server</p> <p><code>/custom &lt;custom_command&gt; &lt;priority&gt;</code> - Calls a custom command</p> <p><code>/stats</code> - Stats, like latency, and the size of the local cache</p> <p><code>/goto &lt;time&gt;</code> - Skips to a given time. Valid formats are: 1h10m3s, 3m, 4m10s...</p> <p><code>/stream &lt;link&gt; &lt;priority&gt;</code> - Streams a song from the given URL, useful for radios</p> <p><code>/update &lt;link&gt; &lt;info&gt; &lt;song&gt;</code> - Next time the song <code>&lt;link&gt;</code> is played, the bot will (if set to true):</p> <ul> <li><code>&lt;info&gt;</code> - Update info about the song, like thumbnail, segments from SponsorBlock, title...</li> <li><code>&lt;song&gt;</code> - Re-downloads the entire song</li> </ul> <p><code>/blacklist &lt;user&gt;</code> - Adds or remove a person from the bot blacklist</p> <p><code>/dj</code> - Enables or disable DJ mode for the current server, only users with the DJ role can use the bot</p> <p><code>/djrole &lt;role&gt;</code> - Sets the DJ role for the current server</p> <p><code>/djroletoggle &lt;user&gt;</code> - Adds or removes the DJ role from the given user</p>"},{"location":"hosting.html","title":"Creating and adding the bot to your server","text":""},{"location":"hosting.html#creating-the-bot","title":"Creating the bot","text":"<ul> <li>Head over to the Discord Developer Portal</li> <li>Create a new application by clicking the New Application button on the top right corner</li> </ul>"},{"location":"hosting.html#obtaining-the-token","title":"Obtaining the token","text":"<ul> <li>Select your newly created application, and go to the Bot tab</li> <li>Click on Reset Token, and copy and paste the shown token on your <code>config.yml</code>   Note:</li> <li>On this page you can also change the username and update the icon for your bot</li> <li>If you plan to let others add your bot, enable the Public bot toggle</li> </ul>"},{"location":"hosting.html#adding-the-bot","title":"Adding the bot","text":"<ul> <li>We need to generate the URL: click on OAuth2 -&gt; URL Generator</li> <li>For the scopes tick: bot and applications.commands</li> <li>For the permissions: Send Messages, Connect and Speak</li> </ul> <ul> <li>On the bottom of the page, you will find the generated URL: with that, you can finally add your bot!</li> </ul>"},{"location":"install.html","title":"Installation","text":""},{"location":"install.html#natively","title":"Natively","text":"<p>First thing, we need to install some packages</p> <pre><code>sudo apt install build-essential golang-go git yt-dlp ffmpeg libopus-dev -y\n</code></pre> <p>After installation is done, we can clone the repo with</p> <pre><code>git clone https://github.com/TheTipo01/YADMB\n</code></pre> <p>Enter the directory, and build the bot</p> <pre><code>cd YADMB\ngo build\n</code></pre> <p>We only need to install DCA</p> <pre><code>go get -u github.com/bwmarrin/dca/cmd/dca\n</code></pre> <p>Final things: - add <code>dca</code> to your path, you can do that by creating a symlink of that executable to your <code>/usr/bin</code> directory (<code>ln -s /home/thetipo01/go/bin/dca /usr/bin/dca</code>) - modify the <code>example_config.yml</code>, adding all required tokens and renaming it to <code>config.yml</code> - for info about creating and adding the bot, see the following page</p>"},{"location":"install.html#docker","title":"Docker","text":"<ul> <li>Clone the repo</li> <li>Modify the <code>example_config.yml</code>, by adding your discord bot token   (see here if you don't know how to do it)</li> <li>Rename it in <code>config.yml</code> and move it in the <code>data</code> directory</li> <li>Run <code>docker-compose up -d</code></li> <li>Enjoy your YADMB instance!</li> </ul> <p>Note: the docker image is available on Docker hub, Quay.io and Github packages.</p>"}]}