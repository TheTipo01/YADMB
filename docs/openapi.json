{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "YADMB",
    "description": "The web api for interacting with the music bot"
  },
  "tags": [
    {
      "name": "favorites",
      "description": "Manage and see the user's favorites"
    },
    {
      "name": "queue",
      "description": "Manage the server's queue"
    },
    {
      "name": "song",
      "description": "Play/pause the current song"
    },
    {
      "name": "websockets",
      "description": "Get notifications about events of the bot"
    }
  ],
  "security": [
    {
      "TokenAuthentication": []
    }
  ],
  "paths": {
    "/favorites": {
      "get": {
        "tags": [
          "favorites"
        ],
        "summary": "Get favorites",
        "description": "Returns all the favorite for the given user",
        "operationId": "getFavorites",
        "responses": {
          "200": {
            "description": "All the favorites of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Favorite"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token not valid"
          }
        }
      },
      "post": {
        "tags": [
          "favorites"
        ],
        "summary": "Add a favorite",
        "description": "Adds a favorite to the database",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100,
                    "description": "The name of the favorite, max 100 characters"
                  },
                  "link": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200,
                    "description": "The link of the song, max 200 characters"
                  },
                  "folder": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100,
                    "description": "The name of the folder, max 100 characters"
                  }
                },
                "required": [
                  "name",
                  "link"
                ]
              }
            }
          }
        },
        "operationId": "addFavorite",
        "responses": {
          "200": {
            "description": "Favorite added successfully"
          },
          "401": {
            "description": "Token not valid"
          },
          "500": {
            "description": "Name duplicated for the given user"
          }
        }
      },
      "delete": {
        "tags": [
          "favorites"
        ],
        "summary": "Remove a favorite",
        "description": "Removes a favorite from the database",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100,
                    "description": "The name of the favorite, max 100 characters"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "operationId": "removeFavorite",
        "responses": {
          "200": {
            "description": "Favorite removed successfully"
          },
          "401": {
            "description": "Token not valid"
          },
          "500": {
            "description": "Favorite doesn't exist"
          }
        }
      }
    },
    "/queue/{guild}": {
      "get": {
        "tags": [
          "queue"
        ],
        "summary": "Get the entire queue for a given guild",
        "description": "Returns the entire queue of a guild",
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "getQueue",
        "responses": {
          "200": {
            "description": "Elements of the queue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Element"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          }
        }
      },
      "post": {
        "tags": [
          "queue"
        ],
        "summary": "Add a song to the queue",
        "description": "Adds the given song to the queue",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "song": {
                    "type": "string",
                    "description": "A link to a song or a query to search on youtube"
                  },
                  "playlist": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Is the song a playlist?"
                  },
                  "shuffle": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Should we shuffle the given playlist?"
                  },
                  "loop": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Should the song be looped?"
                  },
                  "priority": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Should we add the song as the first in the queue?"
                  }
                },
                "required": [
                  "song"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "addToQueue",
        "responses": {
          "200": {
            "description": "Song added successfully"
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          },
          "403": {
            "description": "User not in voice channel of the guild, or dj mode is active and user is not a dj"
          },
          "406": {
            "description": "Playlist supplied, but flag was not raised"
          }
        }
      },
      "delete": {
        "tags": [
          "queue"
        ],
        "summary": "Skip the currently playing song",
        "description": "Skip the currently playing song",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "clean": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Should we clean the entire queue?"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "skip",
        "responses": {
          "200": {
            "description": "Song skipped successfully"
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          },
          "403": {
            "description": "User not in voice channel of the guild"
          },
          "406": {
            "description": "The bot is not playing anything or the queue is empty"
          }
        }
      }
    },
    "/song/pause/{guild}": {
      "get": {
        "tags": [
          "song"
        ],
        "summary": "Pause the currently playing song",
        "description": "Pause the currently playing song",
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "pause",
        "responses": {
          "200": {
            "description": "Song paused successfully"
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          },
          "406": {
            "description": "Song is already paused or the queue is empty"
          }
        }
      }
    },
    "/song/resume/{guild}": {
      "get": {
        "tags": [
          "song"
        ],
        "summary": "Resume the currently playing song",
        "description": "Resume the currently playing song",
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "resume",
        "responses": {
          "200": {
            "description": "Song resumed successfully"
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          },
          "406": {
            "description": "Song is already playing  or the queue is empty"
          }
        }
      }
    },
    "/song/toggle/{guild}": {
      "get": {
        "tags": [
          "song"
        ],
        "summary": "Play/pauses the currently playing song",
        "description": "Play/pauses the currently playing song",
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "toggle",
        "responses": {
          "200": {
            "description": "Song paused or resumed successfully"
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          },
          "406": {
            "description": "The queue is empty"
          },
          "500": {
            "description": "Couldn't toggle song"
          }
        }
      }
    },
    "/ws/{guild}": {
      "get": {
        "tags": [
          "websockets"
        ],
        "summary": "Get a websocket for receiving notifications",
        "description": "Estabilishes a websocket connection: every message contains the type of event (as an enum), and if needed the song pertaining the event. Note: for description about the enum, see [here](https://github.com/TheTipo01/YADMB/blob/master/api/notification/structure.go#L7).",
        "parameters": [
          {
            "name": "guild",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The guild id"
          }
        ],
        "operationId": "websocket",
        "responses": {
          "101": {
            "description": "Websocket estabilished",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "401": {
            "description": "Token not valid or it doesn't have access to the given guild"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "TokenAuthentication": {
        "type": "apiKey",
        "in": "query",
        "name": "token"
      }
    },
    "schemas": {
      "Element": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "KygYQJEi3SQ-youtube"
          },
          "title": {
            "type": "string",
            "example": "Charlie - Faccia da Pirla"
          },
          "duration": {
            "type": "string",
            "example": "04:19"
          },
          "link": {
            "type": "string",
            "example": "https://www.youtube.com/watch?v=KygYQJEi3SQ"
          },
          "user": {
            "type": "string",
            "example": "thetipo01"
          },
          "thumbnail": {
            "type": "string",
            "example": "https://i.ytimg.com/vi/KygYQJEi3SQ/maxresdefault.jpg"
          },
          "loop": {
            "type": "boolean",
            "example": false
          },
          "frames": {
            "type": "integer",
            "example": 10248
          },
          "isPaused": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "id",
          "title",
          "duration",
          "link",
          "user",
          "thumbnail",
          "loop"
        ]
      },
      "Favorite": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Very nice song"
          },
          "link": {
            "type": "string",
            "example": "https://www.youtube.com/watch?v=PvuYSybooLg"
          },
          "folder": {
            "type": "string",
            "example": "Sonic OST"
          }
        },
        "required": [
          "name",
          "link"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "notification": {
            "type": "integer",
            "example": 0
          },
          "song": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Element"
            }
          }
        }
      }
    }
  }
}